plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'org.springframework.boot' version '2.5.2'
    id 'org.flywaydb.flyway' version '7.10.0'
}

allprojects {
    group = 'com.epam.esm'
    version = '1.0'
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    dependencies {

        implementation 'org.springframework.hateoas:spring-hateoas'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-test'

        implementation 'org.postgresql:postgresql:42.2.22'

        implementation 'org.mapstruct:mapstruct:1.4.2.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
        compileOnly 'org.projectlombok:lombok:1.18.20'
        annotationProcessor "org.projectlombok:lombok:1.18.20"

        implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.12.3'
        implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.12.3'
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.3'
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.9.3'

        testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
        testImplementation 'org.mockito:mockito-core:3.11.1'
        testImplementation 'org.mockito:mockito-junit-jupiter:3.11.2'
        testImplementation 'org.junit.platform:junit-platform-runner:1.8.0-M1'
        testImplementation 'org.junit.vintage:junit-vintage-engine:5.8.0-M1'
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        dependsOn test
        reports {
            xml.required = false
            csv.required = false
            html.outputLocation = layout.buildDirectory.dir('reports/tests/coverage/')
        }
        classDirectories.setFrom(
                fileTree(dir: "build/classes/java/main/com/epam/esm")
                        .filter({ file -> !file.path.contains('/config') })
                        .filter({ file -> !file.path.contains('/api') })
                        .filter({ file -> !file.path.contains('/entity') })
        )
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.postgresql:postgresql:42.2.22'
}

flyway {
    driver = 'org.postgresql.Driver'
    url = 'jdbc:postgresql://localhost:54321/rest'
    user = 'rest'
    password = 'rest'
    schemas = ['gifts', 'users', 'orders']
    locations = ['filesystem:config/src/main/resources/db/migrations/']
}

bootJar { enabled = false }
jar { enabled = false }