plugins {
    id 'java'
    id 'war'
    id "org.flywaydb.flyway" version "7.10.0"
}

group 'com.epam.esm'
version '1.0-SNAPSHOT'

def springVersion = '5.3.8'

def props = new Properties()
file("./src/main/resources/application.properties").withInputStream { props.load(it) }

if (props.getProperty("spring.profiles.active") == "dev") {
    file("./src/main/resources/application-dev.properties").withInputStream { props.load(it) }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework:spring-core:${springVersion}"
    implementation "org.springframework:spring-context:${springVersion}"
    implementation "org.springframework:spring-web:${springVersion}"
    implementation "org.springframework:spring-webmvc:${springVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.12.3'
    implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.12.3'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.3'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.9.3'
    implementation 'org.postgresql:postgresql:42.2.22'

    compileOnly "org.flywaydb:flyway-core:7.10.0"

    testImplementation 'junit:junit:4.11'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

war {
    archiveName 'rest-api-basics.war'
}

flyway {
    driver = props.getProperty("datasource.driver")
    url = 'jdbc:postgresql://localhost:54321/rest'
    user = props.getProperty("datasource.username")
    password = props.getProperty("datasource.password")

    connectRetries = 10
    schemas = ['gifts', 'public']
    skipDefaultCallbacks = false
    cleanDisabled = false
}